/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.103
 * Generated at: 2020-05-16 11:21:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hrd.member.domain.MemberDTO;
import java.util.List;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("\tmax-height: 1300px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu a {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tpadding: 0 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table,th,td{\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tborder:  1px solid black;\r\n");
      out.write("\tmargin: auto;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header style=\"background-color: blue; width: 100%; height: 15%;\">\r\n");
      out.write("\t\t<h1 style=\"color: white; text-align: center; padding-top: 50px;\">쇼핑몰\r\n");
      out.write("\t\t\t회원관리 ver1.0</h1>\r\n");
      out.write("\t</header>\r\n");
      out.write("\r\n");
      out.write("\t<nav style=\"background-color: red; height: 5%;\">\r\n");
      out.write("\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t<a href=\"/member/insertUI.do\"><strong>회원 가입</strong></a> <a\r\n");
      out.write("\t\t\t\thref=\"/member/list.do\"><strong>회원목록 수정/삭제</strong></a> <a href=\"\"><strong>회원\r\n");
      out.write("\t\t\t\t\t매출 조회</strong></a> <a href=\"/\"><strong>홈으로</strong></a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("\t<section style=\"background-color: green; height: 800px\">\r\n");
      out.write("\t\t<h1 style=\"padding: 10px; text-align: center;\">회원목록조회/수정</h1>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>회원번호</th>\r\n");
      out.write("\t\t\t\t\t<th>회원이름</th>\r\n");
      out.write("\t\t\t\t\t<th>전화번호</th>\r\n");
      out.write("\t\t\t\t\t<th>주소</th>\r\n");
      out.write("\t\t\t\t\t<th>가입일자</th>\r\n");
      out.write("\t\t\t\t\t<th>고객등급</th>\r\n");
      out.write("\t\t\t\t\t<th>거주지역</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t");

			List list = (List) request.getAttribute("list");
			for (Object obj : list) {
				MemberDTO dto = null;
				if (obj instanceof MemberDTO) {
					dto = (MemberDTO) obj;
					String url = "/member/read.do?custno="+dto.getCustno();
		
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><a href=");
      out.print(url  );
      out.write('>');
      out.print(dto.getCustno() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(dto.getCustname() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(dto.getPhone() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(dto.getAddress() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(dto.getJoindate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(dto.getGrade() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(dto.getCity() );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr> \r\n");
      out.write("\t\t");
}else{
		
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"7\">등록된 회원이 존재하지 않습니다.</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t");

			}}
		
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</section>\r\n");
      out.write("\r\n");
      out.write("\t<footer> </footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
